<?xml version="1.0"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhu.dao.TeacherMapper">
    <select id="getTeacher" resultType="com.zhu.pojo.Teacher">
        select * from teacher;
    </select>
<!--  按结果嵌套查询-->
    <select id="GetTeacher" resultMap="GetStudent">
        select s.id sid ,s.name sname ,t.name tname,t.id tid
        from student s,teacher t
        where s.tid = t.id and t.id=#{tid}
    </select>
    <resultMap id="GetStudent" type="com.zhu.pojo.Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
<!--
    javaType="" 指定的属性的类型
    集合中的泛型信息用 ofType 获取
-->
        <collection property="students" ofType="com.zhu.pojo.Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>
<!--    先查询老师,再查学生-->
    <select id="GetTeacher2" resultMap="GetStudent2">
        select *from teacher where id=#{tid}
    </select>
    <resultMap id="GetStudent2" type="com.zhu.pojo.Teacher">
        <collection property="students"  javaType="ArrayList" ofType="com.zhu.pojo.Student" select="GetStudentByTeacherId" column="id"/>
    </resultMap>

    <select id="GetStudentByTeacherId" resultType="com.zhu.pojo.Student">
        select *from student where tid = #{tid}
    </select>

</mapper>